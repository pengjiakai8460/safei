<?php

define("FANWE",0);
function init_checker()
{
$iiiiiiiiiiii = array(
base64_encode(base64_encode("*.ziyuanchushou.com")),
base64_encode(base64_encode("*.ziyuanchushou.com")),
base64_encode(base64_encode("localhost")),
base64_encode(base64_encode("127.0.0.1")),
base64_encode(base64_encode("118.178.89.251")),
/*base64_encode(base64_encode("safeionline.com")),
base64_encode(base64_encode("www.safeionline.com")),*/
base64_encode(base64_encode("safei.com")),
base64_encode(base64_encode("www.safei.com")),
);
$str = base64_encode(base64_encode(serialize($iiiiiiiiiiii))."|".serialize($iiiiiiiiiiii));
$arr = explode("|",base64_decode($str));
$arr = unserialize($arr[1]);
foreach($arr as $k=>$v)
{
$arr[$k] = base64_decode(base64_decode($v));
}
$host = $_SERVER["HTTP_HOST"];
$host = explode(":",$host);
$host = $host[0];
$passed = false;
foreach($arr as $k=>$v)
{
if(substr($v,0,2)=="*.")
{
$preg_str = substr($v,2);
if(preg_match("/".$preg_str."$/",$host)>0)
{
$passed = true;
break;
}
}
}
if(!$passed)
{
if(!in_array($host,$arr))
{
return false;
}
}
return true;
}
$checker = init_checker();
if(!$checker)die('未授权');
if(!file_exists(APP_ROOT_PATH."public/install.lock") &&function_exists("app_redirect"))
{
app_redirect(APP_ROOT."/install/index.php");
}
if(file_exists(APP_ROOT_PATH."system/config.php"))
$sys_config = require APP_ROOT_PATH."system/config.php";
function app_conf($name)
{
if($name=="SITE_TITLE"){
$name = "SHOP_TITLE";
}
if($name=="NAV_PEIZI_OPEN")
return 1;
if($name=="NAV_LICAI_OPEN")
return 1;
if($name=="NAV_PROJECT_OPEN")
return 1;
if(isset($GLOBALS["sys_config"][$name]))
return stripslashes($GLOBALS["sys_config"][$name]);
else
return null;
}
if(!file_exists(APP_ROOT_PATH."public/runtime/app/"))
mkdir(APP_ROOT_PATH."public/runtime/app/",0777);
if(!file_exists(APP_ROOT_PATH."public/runtime/app/db_caches/"))
mkdir(APP_ROOT_PATH."public/runtime/app/db_caches/",0777);
if(!file_exists(APP_ROOT_PATH."public/runtime/app/tpl_caches/"))
mkdir(APP_ROOT_PATH."public/runtime/app/tpl_caches/",0777);
if(!file_exists(APP_ROOT_PATH."public/runtime/app/tpl_compiled/"))
mkdir(APP_ROOT_PATH."public/runtime/app/tpl_compiled/",0777);
if(function_exists("date_default_timezone_set"))
date_default_timezone_set(app_conf("DEFAULT_TIMEZONE"));
$define_file = APP_ROOT_PATH."system/lailai/define.php";
if(file_exists($define_file))
require_once $define_file;
define("DB_PREFIX",app_conf("DB_PREFIX"));
$dist_cfg = APP_ROOT_PATH."system/dist_cfg.php";
if(file_exists($dist_cfg))
$distribution_cfg = require_once $dist_cfg;
$distribution_cfg["CACHE_TYPE"]	=	"File";
$distribution_cfg["CACHE_LOG"]	=	false;
$distribution_cfg["SESSION_TYPE"]	=	"File";
$distribution_cfg["ALLOW_DB_DISTRIBUTE"]	=	false;
$distribution_cfg["CSS_JS_OSS"]	=	false;
$distribution_cfg["OSS_TYPE"]	=	"";
$distribution_cfg["ORDER_DISTRIBUTE_COUNT"]	=	"0";
$distribution_cfg["DOMAIN_ROOT"]	=	app_conf("DOMAIN_ROOT");
$distribution_cfg["COOKIE_PATH"]	=	"/";
if(!function_exists("load_fanwe_cache"))
{
function load_fanwe_cache()
{
global $distribution_cfg;
$type = $distribution_cfg["CACHE_TYPE"];
$cacheClass = "Cache".ucwords(strtolower(strim($type)))."Service";
if(file_exists(APP_ROOT_PATH."system/cache/".$cacheClass.".php"))
{
require_once APP_ROOT_PATH."system/cache/".$cacheClass.".php";
if(class_exists($cacheClass))
{
$cache = new $cacheClass();
}
return $cache;
}
else
{
$file_cache_file = APP_ROOT_PATH."system/cache/CacheFileService.php";
if(file_exists($file_cache_file))
require_once APP_ROOT_PATH."system/cache/CacheFileService.php";
if(class_exists("CacheFileService"))
$cache = new CacheFileService();
return $cache;
}
}
}
$cache_service_file = APP_ROOT_PATH."system/cache/Cache.php";
if(file_exists($cache_service_file))
require_once $cache_service_file;
if(class_exists("CacheService"))
$cache = CacheService::getInstance();
require APP_ROOT_PATH."system/db/db.php";
$pconnect = false;
$db = new mysql_db(app_conf("DB_HOST").":".app_conf("DB_PORT"),app_conf("DB_USER"),app_conf("DB_PWD"),app_conf("DB_NAME"),"utf8",$pconnect);
if(function_exists("update_sys_config"))
update_sys_config();
require  APP_ROOT_PATH."system/template/template.php";
$tmpl = new AppTemplate;
require_once APP_ROOT_PATH."system/utils/es_cookie.php";
require_once APP_ROOT_PATH."system/utils/es_session.php";
function get_http()
{
return (isset($_SERVER["HTTPS"]) &&(strtolower($_SERVER["HTTPS"]) != "off")) ?"https://" : "http://";
}
function get_domain()
{
$protocol = get_http();
if (isset($_SERVER["HTTP_X_FORWARDED_HOST"]))
{
$host = $_SERVER["HTTP_X_FORWARDED_HOST"];
}
elseif (isset($_SERVER["HTTP_HOST"]))
{
$host = $_SERVER["HTTP_HOST"];
}
else
{
if (isset($_SERVER["SERVER_PORT"]))
{
$port = ":" .$_SERVER["SERVER_PORT"];
if ((":80" == $port &&"http://" == $protocol) ||(":443" == $port &&"https://" == $protocol))
{
$port = "";
}
}
else
{
$port = "";
}
if (isset($_SERVER["SERVER_NAME"]))
{
$host = $_SERVER["SERVER_NAME"] .$port;
}
elseif (isset($_SERVER["SERVER_ADDR"]))
{
$host = $_SERVER["SERVER_ADDR"] .$port;
}
}
return $protocol .$host;
}
function get_host()
{
if (isset($_SERVER["HTTP_X_FORWARDED_HOST"]))
{
$host = $_SERVER["HTTP_X_FORWARDED_HOST"];
}
elseif (isset($_SERVER["HTTP_HOST"]))
{
$host = $_SERVER["HTTP_HOST"];
}
else
{
if (isset($_SERVER["SERVER_NAME"]))
{
$host = $_SERVER["SERVER_NAME"];
}
elseif (isset($_SERVER["SERVER_ADDR"]))
{
$host = $_SERVER["SERVER_ADDR"];
}
}
return $host;
}
function filter_ma_request($str){
$search = array("../","\n","\r","\t","\r\n","'","<",">","\"","%");
return str_replace($search,"",$str);
}
if(app_conf("URL_MODEL")==1)
{
$current_url = APP_ROOT;
$current_file = explode("/",_PHP_FILE_);
$current_file = $current_file[count($current_file)-1];
if($current_file=="index.php"||$current_file=="shop.php")
$app_index = "";
else 
$app_index = str_replace(".php","",$current_file);
if($app_index!="")
$current_url = $current_url."/".$app_index;
$rewrite_param = $_REQUEST["rewrite_param"];
$rewrite_param = explode("/",$rewrite_param);
if($rewrite_param){
foreach($rewrite_param as $k=>$param_item)
{
if($param_item!="")
$rewrite_param_array[] = $param_item;
}
}
if($rewrite_param_array){
foreach ($rewrite_param_array as $k=>$v)
{
if(substr($v,0,1)=="-")
{
$v = substr($v,1);
$ext_param = explode("-",$v);
foreach($ext_param as $kk=>$vv)
{
if($kk%2==0)
{
if(preg_match("/(\w+)\[(\w+)\]/",$vv,$matches))
{
$_GET[$matches[1]][$matches[2]] = $ext_param[$kk+1];
}
else
$_GET[$ext_param[$kk]] = $ext_param[$kk+1];
if($ext_param[$kk]!="p")
{
$current_url.=$ext_param[$kk];
$current_url.="-".$ext_param[$kk+1]."-";
}
}
}
}
elseif($k==0)
{
$ctl_act = explode("-",$v);
if($ctl_act[0]!="cid"&&$ctl_act[0]!="id"&&$ctl_act[0]!="aid"&&$ctl_act[0]!="qid"&&$ctl_act[0]!="pid"&&$ctl_act[0]!="cid"&&$ctl_act[0]!="a")
{
$_GET["ctl"] = $ctl_act[0];
$_GET["act"] = $ctl_act[1];
$current_url.="/".$ctl_act[0];
if($ctl_act[1]!="")
$current_url.="-".$ctl_act[1]."/";
else
$current_url.="/";
}
else
{
$ext_param = explode("-",$v);
foreach($ext_param as $kk=>$vv)
{
if($kk%2==0)
{
if(preg_match("/(\w+)\[(\w+)\]/",$vv,$matches))
{
$_GET[$matches[1]][$matches[2]] = $ext_param[$kk+1];
}
else
$_GET[$ext_param[$kk]] = $ext_param[$kk+1];
if($ext_param[$kk]!="p")
{
if($kk==0)$current_url.="/";
$current_url.=$ext_param[$kk];
$current_url.="-".$ext_param[$kk+1]."-";
}
}
}
}
}elseif($k==1)
{
$ext_param = explode("-",$v);
foreach($ext_param as $kk=>$vv)
{
if($kk%2==0)
{
if(preg_match("/(\w+)\[(\w+)\]/",$vv,$matches))
{
$_GET[$matches[1]][$matches[2]] = $ext_param[$kk+1];
}
else
$_GET[$ext_param[$kk]] = $ext_param[$kk+1];
if($ext_param[$kk]!="p")
{
$current_url.=$ext_param[$kk];
$current_url.="-".$ext_param[$kk+1]."-";
}
}
}
}
}
}
$current_url = substr($current_url,-1)=="-"?substr($current_url,0,-1):$current_url;
}
unset($_REQUEST["rewrite_param"]);
unset($_GET["rewrite_param"]);
$_REQUEST = array_merge($_GET,$_POST);
filter_request($_REQUEST);
$lang_file = APP_ROOT_PATH."/app/Lang/".app_conf("SHOP_LANG")."/lang.php";
if(file_exists($lang_file))
$lang = require_once $lang_file;
function run_info()
{
if(!SHOW_DEBUG)return "";
$query_time = number_format($GLOBALS["db"]->queryTime,6);
if($GLOBALS["begin_run_time"]==""||$GLOBALS["begin_run_time"]==0)
{
$run_time = 0;
}
else
{
if (PHP_VERSION >= "5.0.0")
{
$run_time = number_format(microtime(true) -$GLOBALS["begin_run_time"],6);
}
else
{
list($now_usec,$now_sec)     = explode(" ",microtime());
list($start_usec,$start_sec) = explode(" ",$GLOBALS["begin_run_time"]);
$run_time = number_format(($now_sec -$start_sec) +($now_usec -$start_usec),6);
}
}
if (function_exists("memory_get_usage"))
{
$unit=array("B","KB","MB","GB");
$size = memory_get_usage();
$used = @round($size/pow(1024,($i=floor(log($size,1024)))),2)." ".$unit[$i];
$memory_usage = lang("MEMORY_USED",$used);
}
else
{
$memory_usage = "";
}
$enabled_gzip = (app_conf("GZIP_ON") &&function_exists("ob_gzhandler"));
$gzip_enabled = $enabled_gzip ?lang("GZIP_ON") : lang("GZIP_OFF");
$str = lang("QUERY_INFO_STR",$GLOBALS["db"]->queryCount,$query_time,$gzip_enabled,$memory_usage,$run_time);
foreach($GLOBALS["db"]->queryLog as $K=>$sql)
{
if($K==0)$str.="<br />SQL语句列表：";
$str.="<br />行".($K+1).":".$sql;
}
return "<div style='width:940px; padding:10px; line-height:22px; border:1px solid #ccc; text-align:left; margin:30px auto; font-size:14px; color:#999; height:150px; overflow-y:auto;'>".$str."</div>";
}
function lang($key)
{
$args = func_get_args();
$key = strtoupper($key);
if(isset($GLOBALS["lang"][$key]))
{
if(count($args)==1)
return $GLOBALS["lang"][$key];
else
{
$result = $key;
$cmd = "$result"." = sprintf('".$GLOBALS["lang"][$key]."'";
for ($i=1;$i<count($args);$i++)
{
$cmd .= ",'".$args[$i]."'";
}
$cmd.=");";
eval($cmd);
return $result;
}
}
else
return $key;
}
function adv_preg($r){
return $GLOBALS["adv"]["code"];
}
function next_replay_month($time,$m=1){
$str_t = to_timespan(to_date($time)." ".$m." month ");
return $str_t;
}
function user_info_expire($u_info){
$time = TIME_UTC;
$expire_time = 6*30*24*3600;
if($u_info["workpassed"]==1){
if(($time -$u_info["workpassed_time"]) >$expire_time){
$expire["workpassed_expire"] = 1;
}
}
if($u_info["incomepassed"]==1){
if(($time -$u_info["incomepassed_time"]) >$expire_time){
$expire["incomepassed_expire"] = 1;
}
}
if($u_info["creditpassed"]==1){
if(($time -$u_info["creditpassed_time"]) >$expire_time){
$expire["creditpassed_expire"] = 1;
}
}
if($u_info["residencepassed"]==1){
if(($time -$u_info["residencepassed_time"]) >$expire_time){
$expire["residencepassed_expire"] = 1;
}
}
return $expire;
}
function format_conf_count($number){
if($number=="")
return "0<em>.00</em>";
$attr_number = explode(".",$number);
return $attr_number[0]."<em>".(trim($attr_number[1]) == ""?".00": ".".$attr_number[1])."</em>";
}
if(!function_exists("format_image_path"))
{
function format_image_path($out)
{
if($GLOBALS["distribution_cfg"]["OSS_TYPE"]&&$GLOBALS["distribution_cfg"]["OSS_TYPE"]!="NONE")
{
$domain = $GLOBALS["distribution_cfg"]["OSS_DOMAIN"];
}
else
{
$domain = SITE_DOMAIN.APP_ROOT;
}
$out = str_replace(APP_ROOT."./public/",$domain."/public/",$out);
$out = str_replace("./public/",$domain."/public/",$out);
return $out;
}
}
function FilterAllowExt(){
$ext =  strtolower(app_conf("ALLOW_IMAGE_EXT"));
$allow = explode(",",$ext);
$not_allow = array(
"asp",
"aspx",
"do",
"php",
"jsp",
);
return array_diff($allow,$not_allow);
}
if(!function_exists("syn_to_remote_image_server"))
{
function syn_to_remote_image_server($url)
{
if($GLOBALS["distribution_cfg"]["OSS_TYPE"]&&$GLOBALS["distribution_cfg"]["OSS_TYPE"]!="NONE")
{
if($GLOBALS["distribution_cfg"]["OSS_TYPE"]=="ES_FILE")
{
$pathinfo = pathinfo($url);
$file = $pathinfo["basename"];
$dir = $pathinfo["dirname"];
$dir = str_replace("./public/","",$dir);
$filefull = SITE_DOMAIN.APP_ROOT."/public/".$dir."/".$file;
$syn_url = $GLOBALS["distribution_cfg"]["OSS_DOMAIN"]."/es_file.php?username=".$GLOBALS["distribution_cfg"]["OSS_ACCESS_ID"]."&password=".$GLOBALS["distribution_cfg"]["OSS_ACCESS_KEY"]."&file=".
$filefull."&path=".$dir."/&name=".$file."&act=0";
@file_get_contents($syn_url);
}
elseif($GLOBALS["distribution_cfg"]["OSS_TYPE"]=="ALI_OSS")
{
$pathinfo = pathinfo($url);
$file = $pathinfo["basename"];
$dir = $pathinfo["dirname"];
$dir = str_replace("./public/","public/",$dir);
$ali_oss_sdk = APP_ROOT_PATH."system/alioss/sdk.class.php";
if(file_exists($ali_oss_sdk))
{
require_once $ali_oss_sdk;
if(class_exists("ALIOSS"))
{
$oss_sdk_service = new ALIOSS();
$oss_sdk_service->set_debug_mode(FALSE);
$bucket = $GLOBALS["distribution_cfg"]["OSS_BUCKET_NAME"];
$object = $dir."/".$file;
$file_path = APP_ROOT_PATH.$dir."/".$file;
$oss_sdk_service->upload_file_by_file($bucket,$object,$file_path);
}
}
}
}
}
}
if(!function_exists("syn_to_remote_file_server"))
{
function syn_to_remote_file_server($url)
{
if($GLOBALS["distribution_cfg"]["OSS_TYPE"]&&$GLOBALS["distribution_cfg"]["OSS_TYPE"]!="NONE")
{
if($GLOBALS["distribution_cfg"]["OSS_TYPE"]=="ES_FILE")
{
$pathinfo = pathinfo($url);
$file = $pathinfo["basename"];
$dir = $pathinfo["dirname"];
$dir = str_replace("public/","",$dir);
$filefull = SITE_DOMAIN.APP_ROOT."/public/".$dir."/".$file;
$syn_url = $GLOBALS["distribution_cfg"]["OSS_DOMAIN"]."/es_file.php?username=".$GLOBALS["distribution_cfg"]["OSS_ACCESS_ID"]."&password=".$GLOBALS["distribution_cfg"]["OSS_ACCESS_KEY"]."&file=".
$filefull."&path=".$dir."/&name=".$file."&act=0";
@file_get_contents($syn_url);
}
elseif($GLOBALS["distribution_cfg"]["OSS_TYPE"]=="ALI_OSS")
{
$pathinfo = pathinfo($url);
$file = $pathinfo["basename"];
$dir = $pathinfo["dirname"];
$ali_oss_sdk = APP_ROOT_PATH."system/alioss/sdk.class.php";
if(file_exists($ali_oss_sdk))
{
require_once $ali_oss_sdk;
if(class_exists("ALIOSS"))
{
$oss_sdk_service = new ALIOSS();
$oss_sdk_service->set_debug_mode(FALSE);
$bucket = $GLOBALS["distribution_cfg"]["OSS_BUCKET_NAME"];
$object = $dir."/".$file;
$file_path = APP_ROOT_PATH.$dir."/".$file;
$oss_sdk_service->upload_file_by_file($bucket,$object,$file_path);
}
}
}
}
}
}
if(!$checker)die(base64_decode(""));
if(!class_exists("FanweSessionHandler"))
{
class FanweSessionHandler
{
private $savePath;
private $mem;
private $db;
private $table;
function open($savePath,$sessionName)
{
$this->savePath = APP_ROOT_PATH.$GLOBALS["distribution_cfg"]["SESSION_FILE_PATH"];
if($GLOBALS["distribution_cfg"]["SESSION_TYPE"]=="MemcacheSASL")
{
$this->mem = require_once APP_ROOT_PATH."system/cache/MemcacheSASL/MemcacheSASL.php";
$this->mem = new MemcacheSASL;
$this->mem->addServer($GLOBALS["distribution_cfg"]["SESSION_CLIENT"],$GLOBALS["distribution_cfg"]["SESSION_PORT"]);
$this->mem->setSaslAuthData($GLOBALS["distribution_cfg"]["SESSION_USERNAME"],$GLOBALS["distribution_cfg"]["SESSION_PASSWORD"]);
}
elseif($GLOBALS["distribution_cfg"]["SESSION_TYPE"]=="Db")
{
$pconnect = false;
$session_client = $GLOBALS["distribution_cfg"]["SESSION_CLIENT"]==""?app_conf("DB_HOST"):$GLOBALS["distribution_cfg"]["SESSION_CLIENT"];
$session_port = $GLOBALS["distribution_cfg"]["SESSION_PORT"]==""?app_conf("DB_PORT"):$GLOBALS["distribution_cfg"]["SESSION_PORT"];
$session_username = $GLOBALS["distribution_cfg"]["SESSION_USERNAME"]==""?app_conf("DB_USER"):$GLOBALS["distribution_cfg"]["SESSION_USERNAME"];
$session_password = $GLOBALS["distribution_cfg"]["SESSION_PASSWORD"]==""?app_conf("DB_PWD"):$GLOBALS["distribution_cfg"]["SESSION_PASSWORD"];
$session_db = $GLOBALS["distribution_cfg"]["SESSION_DB"]==""?app_conf("DB_NAME"):$GLOBALS["distribution_cfg"]["SESSION_DB"];
$this->db = new mysql_db($session_client.":".$session_port,$session_username,$session_password,$session_db,"utf8",$pconnect);
$this->table = $GLOBALS["distribution_cfg"]["SESSION_TABLE"]==""?DB_PREFIX."session":$GLOBALS["distribution_cfg"]["SESSION_TABLE"];
}
else
{
if (!is_dir($this->savePath)) {
@mkdir($this->savePath,0777);
}
}
return true;
}
function close()
{
return true;
}
function read($id)
{
$sess_id = "sess_".$id;
if($GLOBALS["distribution_cfg"]["SESSION_TYPE"]=="MemcacheSASL")
{
return $this->mem->get("$this->savePath/$sess_id");
}
elseif($GLOBALS["distribution_cfg"]["SESSION_TYPE"]=="Db")
{
$session_data = $this->db->getRow("select session_data,session_time from ".$this->table." where session_id = '".$sess_id."'",true);
if($session_data["session_time"]<TIME_UTC)
{
return false;
}
else
{
return $session_data["session_data"];
}
}
else
{
$file = "$this->savePath/$sess_id";
if (filemtime($file) +SESSION_TIME <time() &&file_exists($file)) {
@unlink($file);
}
$data = (string)@file_get_contents($file);
if(!$data){
$sss["module"] = $_REQUEST["ctl"];
$sss["action"] = $_REQUEST["act"];
$sss["ftime"] = to_date(filemtime($file),"Y-m-d H:i:s");
$sss["time"] = to_date(time(),"Y-m-d H:i:s");
@file_put_contents(APP_ROOT_PATH."/public/session_log/log.txt",print_r($sss,1),FILE_APPEND);
}
return $data;
}
}
function write($id,$data)
{
$sess_id = "sess_".$id;
if($GLOBALS["distribution_cfg"]["SESSION_TYPE"]=="MemcacheSASL")
{
return $this->mem->set("$this->savePath/$sess_id",$data,SESSION_TIME);
}
elseif($GLOBALS["distribution_cfg"]["SESSION_TYPE"]=="Db")
{
$session_data = $this->db->getRow("select session_data,session_time from ".$this->table." where session_id = '".$sess_id."'",true);
if($session_data)
{
$session_data["session_data"] = $data;
$session_data["session_time"] = TIME_UTC+SESSION_TIME;
$this->db->autoExecute($this->table,$session_data,"UPDATE","session_id = '".$sess_id."'");
}
else
{
$session_data["session_id"] = $sess_id;
$session_data["session_data"] = $data;
$session_data["session_time"] = TIME_UTC+SESSION_TIME;
$this->db->autoExecute($this->table,$session_data);
}
return true;
}
else
{
return file_put_contents("$this->savePath/$sess_id",$data) === false ?false : true;
}
}
function destroy($id)
{
$sess_id = "sess_".$id;
if($GLOBALS["distribution_cfg"]["SESSION_TYPE"]=="MemcacheSASL")
{
$this->mem->delete($sess_id);
}
elseif($GLOBALS["distribution_cfg"]["SESSION_TYPE"]=="Db")
{
$this->db->query("delete from ".$this->table." where session_id = '".$sess_id."'");
}
else
{
$file = "$this->savePath/$sess_id";
if (file_exists($file)) {
@unlink($file);
}
}
return true;
}
function gc($maxlifetime)
{
if($GLOBALS["distribution_cfg"]["SESSION_TYPE"]=="MemcacheSASL")
{
}
elseif($GLOBALS["distribution_cfg"]["SESSION_TYPE"]=="Db")
{
$this->db->query("delete from ".$this->table." where session_time < ".TIME_UTC);
}
else
{
foreach (glob("$this->savePath/sess_*") as $file) {
if (filemtime($file) +SESSION_TIME <time() &&file_exists($file)) {
unlink($file);
}
}
}
return true;
}
}
}
if(!function_exists("es_session_start"))
{
function es_session_start($session_id)
{
session_set_cookie_params(0,$GLOBALS["distribution_cfg"]["COOKIE_PATH"],$GLOBALS["distribution_cfg"]["DOMAIN_ROOT"],false,true);
if($GLOBALS["distribution_cfg"]["SESSION_FILE_PATH"]!=""||$GLOBALS["distribution_cfg"]["SESSION_TYPE"]=="MemcacheSASL"||$GLOBALS["distribution_cfg"]["SESSION_TYPE"]=="Db")
{
$handler = new FanweSessionHandler();
session_set_save_handler(
array($handler,"open"),
array($handler,"close"),
array($handler,"read"),
array($handler,"write"),
array($handler,"destroy"),
array($handler,"gc")
);
}
if($session_id)
session_id($session_id);
@session_start();
}
}
$act = isset($_REQUEST["act"]) ?strim($_REQUEST["act"]) : "";
if($act!="promote_msg_list"&&$act!="deal_msg_list"&&$act!="apns_list"){
global $sess_id;
global $define_sess_id;
$sess_id = isset($_REQUEST["FANWE_SESSION_ID"]) ?strim($_REQUEST["FANWE_SESSION_ID"]) : 0 ;
if($sess_id)
{
$define_sess_id = true;
es_session::set_sessid($sess_id);
}
else
{
$define_sess_id = false;
$sess_id= es_session::id();
}
}
function request_api($request_url,$act,$request_param=array())
{
$request_param["act"]=$act;
$request_param["from"]="wap";
$request_param["client_ip"]= get_client_ip();
$param=array();
$param["r_type"]=4;
$param["i_type"]=4;
if ($param["r_type"] == 4){
require_once APP_ROOT_PATH."/system/libs/crypt_aes.php";
$aes = new CryptAES();
$aes->set_key("FANWE5LMUQC43P2P");
$aes->require_pkcs5();
$json = json_encode($request_param);
$encText = $aes->encrypt($json);
$param["requestData"]=$encText;
}else{
$param["requestData"]= base64_encode(json_encode($request_param));
}
$request_data = $GLOBALS["transport"]->request($request_url,$param);
$data=$request_data["body"];
if ($param["r_type"] == 4){
$data = $aes->decrypt($data);
$data=json_decode($data,1);
}else{
$data=json_decode(base64_decode($data),1);
}
return $data;
}
?>